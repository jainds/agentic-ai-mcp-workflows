# Customer Data Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-agent
  namespace: insurance-poc
  labels:
    app: customer-agent
    component: technical-agent
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customer-agent
  template:
    metadata:
      labels:
        app: customer-agent
        component: technical-agent
        version: v1
    spec:
      containers:
      - name: customer-agent
        image: insurance-ai-poc:latest
        imagePullPolicy: IfNotPresent
        command:
          - python
          - -m
          - agents.technical.customer_agent
        ports:
        - containerPort: 8010
          name: http
          protocol: TCP
        env:
        - name: AGENT_PORT
          value: "8010"
        envFrom:
        - configMapRef:
            name: agent-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8010
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8010
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: customer-agent
  namespace: insurance-poc
  labels:
    app: customer-agent
    component: technical-agent
spec:
  type: ClusterIP
  selector:
    app: customer-agent
  ports:
  - port: 8010
    targetPort: 8010
    protocol: TCP
    name: http

---
# Policy Data Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-agent
  namespace: insurance-poc
  labels:
    app: policy-agent
    component: technical-agent
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: policy-agent
  template:
    metadata:
      labels:
        app: policy-agent
        component: technical-agent
        version: v1
    spec:
      containers:
      - name: policy-agent
        image: insurance-ai-poc:latest
        imagePullPolicy: IfNotPresent
        command:
          - python
          - -m
          - agents.technical.policy_agent
        ports:
        - containerPort: 8011
          name: http
          protocol: TCP
        env:
        - name: AGENT_PORT
          value: "8011"
        envFrom:
        - configMapRef:
            name: agent-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8011
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8011
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: policy-agent
  namespace: insurance-poc
  labels:
    app: policy-agent
    component: technical-agent
spec:
  type: ClusterIP
  selector:
    app: policy-agent
  ports:
  - port: 8011
    targetPort: 8011
    protocol: TCP
    name: http

---
# Claims Data Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claims-data-agent
  namespace: insurance-poc
  labels:
    app: claims-data-agent
    component: technical-agent
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: claims-data-agent
  template:
    metadata:
      labels:
        app: claims-data-agent
        component: technical-agent
        version: v1
    spec:
      containers:
      - name: claims-data-agent
        image: insurance-ai-poc:latest
        imagePullPolicy: IfNotPresent
        command:
          - python
          - -m
          - agents.technical.claims_agent
        ports:
        - containerPort: 8012
          name: http
          protocol: TCP
        env:
        - name: AGENT_PORT
          value: "8012"
        envFrom:
        - configMapRef:
            name: agent-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8012
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8012
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: claims-data-agent
  namespace: insurance-poc
  labels:
    app: claims-data-agent
    component: technical-agent
spec:
  type: ClusterIP
  selector:
    app: claims-data-agent
  ports:
  - port: 8012
    targetPort: 8012
    protocol: TCP
    name: http 