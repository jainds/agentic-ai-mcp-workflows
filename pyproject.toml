[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "insurance-ai-poc"
version = "1.1.0"
description = "Kubernetes-Native AI Agent PoC using A2A and MCP protocols"
authors = [
    {name = "Insurance AI Team", email = "team@insurance.com"},
]
requires-python = ">=3.12"
dependencies = [
    # Core framework dependencies - updated versions to resolve conflicts
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.28.0",
    "pydantic>=2.8.0",
    "httpx>=0.27.0",
    "requests>=2.31.0",
    "starlette>=0.39.0",
    # Streamlit UI
    "streamlit>=1.28.1",
    "streamlit-autorefresh>=0.0.1",
    "plotly>=5.17.0",
    "altair>=5.1.2",
    # A2A and MCP protocol support - updated MCP
    "mcp>=1.9.0",
    # LLM integration
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    # Database and data handling
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "redis>=5.0.1",
    "pandas>=2.1.3",
    # Testing framework
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "locust>=2.17.0",
    # Development tools
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    # Kubernetes and deployment
    "kubernetes>=28.1.0",
    "pyyaml>=6.0.1",
    # Monitoring and logging
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    # Security and authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "PyJWT>=2.8.0",
    "bcrypt>=4.1.2",
    # Environment and configuration
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.6.1",
    # HTTP clients and async support
    "aiohttp>=3.9.1",
    "asyncio-mqtt>=0.16.1",
    "websockets>=12.0",
    # Data validation and serialization
    "marshmallow>=3.20.1",
    "jsonschema>=4.20.0",
    # Utilities
    "click>=8.1.7",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "tenacity>=8.2.3",
    # Resilience patterns
    "circuitbreaker>=1.4.0",
    "fastmcp>=2.5.1",
]

[tool.hatch.build.targets.wheel]
packages = ["agents", "services", "ui"]

[tool.uv.workspace]
members = [
    "services/claims_service",
    "services/user_service", 
    "services/policy_service",
    "services/analytics_service",
    "agents/domain",
    "agents/technical",
    "agents/shared",
    "ui",
    "tests"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::coverage.exceptions.CoverageWarning",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "contract: Contract tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*", 
    "altair.*",
    "mcp.*",
    "prometheus_client.*",
    "opentelemetry.*",
    "structlog.*",
]
ignore_missing_imports = true 
